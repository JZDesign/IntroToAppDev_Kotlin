import org.jetbrains.kotlin.gradle.tasks.FatFrameworkTask

buildscript {
    ext.ios_framework_name = 'KIntroModels'
    ext.serialization_version = "0.11.1"
    ext.kotlin_version = '1.3.41'
    ext.kotlinx_version = '1.3.41'
}

plugins {
    id 'kotlin-multiplatform' version '1.3.41'
    id 'kotlinx-serialization' version '1.3.41' // Make sure we update ios
}

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://kotlin.bintray.com/kotlinx" }
}

group 'com.jacob.rakidzich'
version '0.0.1'

apply plugin: 'maven-publish'

kotlin {

    targets {
        fromPreset(presets.jvm, 'jvm')

        iosArm32("ios32")
        iosArm64("ios64")
        iosX64("ios")

        configure([ios32, ios64, ios]) {
            binaries.framework {
                baseName = "$ios_framework_name"
            }
        }
    }

    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin('stdlib-common')
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-common:$serialization_version"

            }
        }
        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
            }
        }
        jvmMain {
            dependencies {
                implementation kotlin('stdlib')
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$serialization_version"

            }
        }
        jvmTest {
            dependencies {
                implementation kotlin('test')
                implementation kotlin('test-junit')
            }
        }

        iosMain {
            dependencies {
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-native:$serialization_version" // $serialization_version"
            }

        }

        iosTest {
        }
        
        ios32Main {
            dependsOn iosMain
        }

        ios64Main {
            dependsOn iosMain
        }

    }

    task releaseFatFramework(type: FatFrameworkTask) {
        // The fat framework must have the same base name as the initial frameworks.
        baseName = ios_framework_name

        // The default destination directory is '<build directory>/fat-framework'. "buildDir/fat-framework"
        // For Github releases we set the destination to the project Root so it can be consumed via carthage.
        destinationDir = file("$rootDir")

        // Specify the frameworks to be merged.
        from(
            targets.ios.binaries.getFramework("RELEASE"),
            targets.ios32.binaries.getFramework("RELEASE"),
            targets.ios64.binaries.getFramework("RELEASE")
        )
    }
}

tasks.build.dependsOn releaseFatFramework

configurations {
    compileClasspath
}

